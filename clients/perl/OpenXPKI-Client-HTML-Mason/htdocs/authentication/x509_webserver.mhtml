<%args>
  $msg             => undef
</%args>
<%init>
    my $client     = $context->{client};

    ## check that we must handle this message
    return $msg if (! exists $msg->{SERVICE_MSG});
    return $msg if (exists $msg->{SERVICE_MSG} &&
                           $msg->{SERVICE_MSG} ne "GET_CLIENT_X509_LOGIN");

    my $username    = $ENV{'SSL_CLIENT_S_DN_CN'};
    my @certificate = ( $ENV{'SSL_CLIENT_CERT'} ); 
    
    my $i=0;
    while (1) {
        my $envname = sprintf 'SSL_CLIENT_CERT_CHAIN_%01d', $i;
        my $chaincert = $ENV{$envname};
        print STDERR "Env Counter: $envname - Cert $chaincert \n";
        if (!$chaincert) { last; }
        push  @certificate, $chaincert;
        $i++;
    } 
    
    if (! defined $username || ! defined $certificate[0]) {
        print STDERR "Client cert login but no client cert environment variables present";
        ## hard abort
        exit 100;
    }

    $msg = $client->send_receive_service_msg (
                            'GET_CLIENT_X509_LOGIN',
                            {
                             'LOGIN'       => $username,
                             'CERTIFICATE' => \@certificate,
                            });
    if ($msg->{'SERVICE_MSG'} ne 'GET_CLIENT_X509_LOGIN')
    {
        ## successful login
        return $msg;
    }

    ## Something on server does not accept the client X509 credentials
    ## ==> ALERT: This is a security issue!
    print STDERR "The OpenXPKI daemon does not accept the X509 login!\n";
    print STDERR "Login: $username\n";
    print STDERR "Certificate: " . join "\n", @certificate;
    ## hard abort
    exit 200;
</%init>
