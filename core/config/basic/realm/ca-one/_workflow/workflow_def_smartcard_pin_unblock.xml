<!-- Generated by "tools/scripts/ogflow.pl " -->


<workflow>
    <type>I18N_OPENXPKI_WF_TYPE_SMARTCARD_PIN_UNBLOCK</type>
    <description>I18N_OPENXPKI_WF_DESC_SMARTCARD_PIN_UNBLOCK</description>
    <persister>OpenXPKI</persister>

    <state name="PEND_PIN_CHANGE">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_PEND_PIN_CHANGE</description>
        <action name="scunblock_user_abort" resulting_state="FAILURE">
        </action>
        <action name="scunblock_post_codes" resulting_state="HAVE_CODES">
        </action>
        <action name="scunblock_initialize" resulting_state="HAVE_TOKEN_ID">
        </action>
        <action name="scunblock_generate_activation_code" resulting_state="CHECK_FOR_ACT_HASHES">
        </action>
    </state>

    <state name="PEND_ACT_CODE">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_PEND_ACT_CODE</description>
        <action name="scunblock_user_abort" resulting_state="FAILURE">
        </action>
        <action name="scunblock_initialize" resulting_state="HAVE_TOKEN_ID">
        </action>
        <action name="scunblock_generate_activation_code" resulting_state="CHECK_FOR_ACT_HASHES">
        </action>
    </state>

    <state name="INITIAL">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_INITIAL</description>
        <action name="scunblock_initialize" resulting_state="HAVE_TOKEN_ID">
        </action>
    </state>

    <state name="FAILURE">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_FAILURE</description>
    </state>

    <state name="SUCCESS">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_SUCCESS</description>
    </state>

    <state name="HAVE_TOKEN_OWNER">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_HAVE_TOKEN_OWNER</description>
        <action name="scunblock_initialize" resulting_state="HAVE_TOKEN_ID">
        </action>
        <action name="scunblock_user_abort" resulting_state="FAILURE">
        </action>
        <action name="scunblock_store_auth_ids" resulting_state="RESET_LDAP_ERR">
        </action>
    </state>

    <state name="HAVE_TOKEN_ID"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_HAVE_TOKEN_ID</description>
        <action name="scunblock_get_user_data" resulting_state="CHECK_TOKEN_OWNER">
        </action>
    </state>

    <state name="HAVE_CODES"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_HAVE_CODES</description>
        <action name="scunblock_null1" resulting_state="CAN_FETCH_PUK">
            <condition name="scunblock_auth_codes_valid"/>
        </action>
        <action name="scunblock_null2" resulting_state="CHECK_MAX_PIN_ITERAT.">
            <condition name="!scunblock_auth_codes_valid"/>
        </action>
    </state>

    <state name="CHECK_FOR_ACT_HASHES"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_CHECK_FOR_ACT_HASHES</description>
        <action name="scunblock_null1" resulting_state="PEND_PIN_CHANGE">
            <condition name="scunblock_have_both_hashes"/>
        </action>
        <action name="scunblock_null2" resulting_state="PEND_ACT_CODE">
            <condition name="!scunblock_have_both_hashes"/>
        </action>
    </state>

    <state name="CAN_FETCH_PUK"
            autorun="no">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_CAN_FETCH_PUK</description>
        <action name="scunblock_fetch_puk" resulting_state="CAN_WRITE_PIN">
        </action>
    </state>

    <state name="CAN_WRITE_PIN">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_CAN_WRITE_PIN</description>
        <action name="scunblock_write_pin_nok" resulting_state="FAILURE">
        </action>
        <action name="scunblock_write_pin_ok" resulting_state="SUCCESS">
        </action>
        <action name="scunblock_initialize" resulting_state="HAVE_TOKEN_ID">
        </action>
    </state>

    <state name="ATTEMPTED_RT_NOTIFY"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_ATTEMPTED_RT_NOTIFY</description>
        <action name="scunblock_null1" resulting_state="PEND_ACT_CODE">
            <condition name="scunblock_ticket_set"/>
        </action>
        <action name="scunblock_null2" resulting_state="HAVE_TOKEN_OWNER">
            <condition name="!scunblock_ticket_set"/>
        </action>
    </state>

    <state name="CHECK_MAX_PIN_ITERAT."
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_CHECK_MAX_PIN_ITERAT.</description>
        <action name="scunblock_null1" resulting_state="FAILURE">
            <condition name="scunblock_max_iterations_reached"/>
        </action>
        <action name="scunblock_null2" resulting_state="PEND_PIN_CHANGE">
            <condition name="!scunblock_max_iterations_reached"/>
        </action>
    </state>

    <state name="CHECK_TOKEN_OWNER"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_CHECK_TOKEN_OWNER</description>
        <action name="scunblock_set_creator" resulting_state="HAVE_TOKEN_OWNER">
            <condition name="scunblock_ldap_mail_set"/>
        </action>
        <action name="scunblock_null1" resulting_state="FAILURE">
            <condition name="!scunblock_ldap_mail_set"/>
        </action>
    </state>

    <state name="GET_AUTH1_LDAP"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_GET_AUTH1_LDAP</description>
        <action name="scunblock_get_auth1_id" resulting_state="GET_AUTH2_LDAP">
        </action>
    </state>

    <state name="GET_AUTH2_LDAP"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_GET_AUTH2_LDAP</description>
        <action name="scunblock_get_auth2_id" resulting_state="HAVE_AUTH_IDS">
        </action>
    </state>

    <state name="RESET_LDAP_ERR"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_RESET_LDAP_ERR</description>
        <action name="scunblock_reset_ldap_err" resulting_state="GET_AUTH1_LDAP">
        </action>
    </state>

    <state name="HAVE_AUTH_IDS"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_SMARTCARD_PIN_UNBLOCK_URL_SET</description>
        <action name="scunblock_auth_ldap_err" resulting_state="HAVE_TOKEN_OWNER">
            <condition name="!scunblock_ids_found_in_LDAP"/>
        </action>
        <action name="scpu_notify_auth_contact" resulting_state="ATTEMPTED_RT_NOTIFY">
            <condition name="scunblock_ids_found_in_LDAP"/>
        </action>
    </state>

</workflow>
