<!-- 
  Generated by: tools/scripts/ogflow.pl 

     File: core/config/graffle/workflow_enrollment.graffle
      md5: 225771fdb669ea1b1bd0382cb91b6a3e

-->


<workflow>
    <type>I18N_OPENXPKI_WF_TYPE_ENROLLMENT</type>
    <description>I18N_OPENXPKI_WF_DESC_ENROLLMENT</description>
    <persister>OpenXPKI</persister>

    <state name="INITIALIZED"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_INITIALIZED</description>
        <action name="enroll_extract_csr" resulting_state="READY_TO_PROCESS">
        </action>
    </state>

    <state name="PERSISTENCE"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_PERSISTENCE</description>
        <action name="enroll_null1" resulting_state="FINISHED_PERSIST">
            <condition name="!enroll_signed_renewal"/>
        </action>
        <action name="enroll_load_recent_certificate" resulting_state="FINISHED_PERSIST">
            <condition name="enroll_signed_renewal"/>
        </action>
    </state>

    <state name="INITIAL">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_INITIAL</description>
        <action name="enroll_initialize" resulting_state="INITIALIZED">
        </action>
    </state>

    <state name="AUTHENTICATION"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_AUTHENTICATION</description>
        <action name="enroll_null1" resulting_state="CHECK_INITIAL_ENROLL_AUTHEN">
            <condition name="!enroll_signed_renewal"/>
        </action>
        <action name="enroll_null2" resulting_state="AUTHENTICATED_REQUEST">
            <condition name="enroll_signed_renewal"/>
        </action>
    </state>

    <state name="CHECK_FOR_CHALLENGE_PASSWORD"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CHECK_FOR_CHALLENGE_PASSWORD</description>
        <action name="enroll_null1" resulting_state="EVAL_SIGNER_TRUST">
            <condition name="!enroll_have_challenge_password"/>
        </action>
        <action name="enroll_eval_challenge" resulting_state="EVAL_SIGNER_TRUST">
            <condition name="enroll_have_challenge_password"/>
        </action>
    </state>

    <state name="POLICY_PENDING">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_POLICY_PENDING</description>
        <action name="enroll_fail" resulting_state="FAILURE">
        </action>
        <action name="enroll_allow_retry" resulting_state="FAILURE">
        </action>
    </state>

    <state name="FAILURE">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_FAILURE</description>
    </state>

    <state name="SUCCESS">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_SUCCESS</description>
    </state>

    <state name="PENDING_APPROVAL"
            autorun="no">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_PENDING_APPROVAL</description>
        <action name="enroll_modify_metadata" resulting_state="CLEAR_APPROVALS">
        </action>
        <action name="I18N_OPENXPKI_WF_ACTION_APPROVE_CSR" resulting_state="APPROVAL">
        </action>
        <action name="enroll_disapprove" resulting_state="FAILURE">
        </action>
    </state>

    <state name="PENDING_MANUAL_AUTHENTICATION"
            autorun="no">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_PENDING_MANUAL_AUTHENTICATION</description>
        <action name="enroll_add_authentication" resulting_state="AUTHENTICATED_REQUEST">
        </action>
        <action name="enroll_deny_authentication" resulting_state="FAILURE">
        </action>
    </state>

    <state name="CA_POLICY_APPROVAL"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CA_POLICY_APPROVAL</description>
        <action name="enroll_null1" resulting_state="FAILURE">
            <condition name="!enroll_key_policy_ok"/>
        </action>
        <action name="enroll_null2" resulting_state="CHECK_RENEWAL_TYPE">
            <condition name="enroll_key_policy_ok"/>
        </action>
    </state>

    <state name="AUTHENTICATED_REQUEST"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_AUTHENTICATED_REQUEST</description>
        <action name="enroll_null1" resulting_state="CA_POLICY_APPROVAL">
        </action>
    </state>

    <state name="APPROVAL"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_APPROVAL</description>
        <action name="enroll_calc_approvals" resulting_state="APPROVALS_CALCULATED">
        </action>
    </state>

    <state name="APPROVED"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_APPROVED</description>
        <action name="enroll_null1" resulting_state="ISSUANCE">
        </action>
    </state>

    <state name="CERT_ISSUED"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CERT_ISSUED</description>
        <action name="enroll_persist_cert_metadata" resulting_state="CERT_METADATA_PERSISTED">
        </action>
    </state>

    <state name="ISSUANCE"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_ISSUANCE</description>
        <action name="enroll_persist_csr" resulting_state="CHECK_CA_KEY">
        </action>
    </state>

    <state name="CHECK_CA_KEY"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CHECK_CA_KEY</description>
        <action name="enroll_null1" resulting_state="CA_KEY_NOT_USABLE">
            <condition name="!enroll_ca_key_usable"/>
        </action>
        <action name="enroll_null2" resulting_state="CA_KEY_USABLE">
            <condition name="enroll_ca_key_usable"/>
        </action>
    </state>

    <state name="CA_KEY_USABLE"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CA_KEY_USABLE</description>
        <action name="enroll_get_cert_profile" resulting_state="PREPARED">
        </action>
    </state>

    <state name="CLEAR_APPROVALS"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CLEAR_APPROVALS</description>
        <action name="enroll_clear_approvals" resulting_state="APPROVAL">
        </action>
    </state>

    <state name="CA_KEY_NOT_USABLE">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CA_KEY_NOT_USABLE</description>
        <action name="enroll_continue_issuance" resulting_state="CHECK_CA_KEY">
        </action>
    </state>

    <state name="READY_TO_PROCESS"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_READY_TO_PROCESS</description>
        <action name="enroll_fetch_group_policy" resulting_state="CHECK_FOR_CHALLENGE_PASSWORD">
        </action>
    </state>

    <state name="CLEANUP"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CLEANUP</description>
        <action name="enroll_invalidate_challenge_pass" resulting_state="SUCCESS">
        </action>
    </state>

    <state name="PREPARED"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_PREPARED</description>
        <action name="enroll_issue_cert" resulting_state="CERT_ISSUED">
        </action>
    </state>

    <state name="HAVE_VALID_REQUEST"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_HAVE_VALID_REQUEST</description>
        <action name="enroll_null1" resulting_state="PERSISTENCE">
        </action>
    </state>

    <state name="CHECK_RENEWAL_ELIGIBILITY"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CHECK_RENEWAL_ELIGIBILITY</description>
        <action name="enroll_null1" resulting_state="APPROVAL">
            <condition name="enroll_ca_policy_approval"/>
        </action>
        <action name="enroll_null2" resulting_state="POLICY_PENDING">
            <condition name="!enroll_ca_policy_approval"/>
        </action>
    </state>

    <state name="APPROVALS_CALCULATED"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_APPROVALS_CALCULATED</description>
        <action name="enroll_null1" resulting_state="FAILURE">
            <condition name="!enroll_allow_manual_approval"/>
            <condition name="!enroll_have_all_approvals"/>
        </action>
        <action name="enroll_notify_pending_approval" resulting_state="PENDING_APPROVAL">
            <condition name="enroll_allow_manual_approval"/>
            <condition name="!enroll_have_all_approvals"/>
        </action>
        <action name="enroll_null2" resulting_state="APPROVED">
            <condition name="enroll_have_all_approvals"/>
        </action>
    </state>

    <state name="CHECK_INITIAL_ENROLL_AUTHEN"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CHECK_INITIAL_ENROLL_AUTHEN</description>
        <action name="enroll_null1" resulting_state="AUTHENTICATION_MISSING">
            <condition name="!enroll_trusted_initial_enroll"/>
        </action>
        <action name="enroll_null2" resulting_state="AUTHENTICATED_REQUEST">
            <condition name="enroll_trusted_initial_enroll"/>
        </action>
    </state>

    <state name="NOTIFIED_CERT_ISSUED"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_NOTIFIED_CERT_ISSUED</description>
        <action name="enroll_fork_publish" resulting_state="CLEANUP">
            <condition name="enroll_use_ldap"/>
        </action>
        <action name="enroll_null1" resulting_state="CLEANUP">
            <condition name="!enroll_use_ldap"/>
        </action>
    </state>

    <state name="CERT_METADATA_PERSISTED"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CERT_METADATA_PERSISTED</description>
        <action name="enroll_notify_cert_issued" resulting_state="NOTIFIED_CERT_ISSUED">
        </action>
    </state>

    <state name="ELIGIBLE_FOR_INITIAL_ENROLL"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_ELIGIBLE_FOR_INITIAL_ENROLL</description>
        <action name="enroll_null1" resulting_state="CONTINUE_INITIAL_ENROLL">
            <condition name="!enroll_auto_revoke_existing_certs"/>
        </action>
        <action name="enroll_null2" resulting_state="AUTO_REVOKE_EXISTING_CERTS">
            <condition name="enroll_auto_revoke_existing_certs"/>
        </action>
    </state>

    <state name="EVAL_ELIGIBILITY"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_EVAL_ELIGIBILITY</description>
        <action name="enroll_eval_eligibility" resulting_state="CHECK_FOR_VALID_REQUEST">
        </action>
    </state>

    <state name="AUTO_REVOKE_EXISTING_CERTS"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_AUTO_REVOKE_EXISTING_CERTS</description>
        <action name="enroll_revoke_existing_certs" resulting_state="QUEUED_FOR_REVOCATION">
        </action>
    </state>

    <state name="CONTINUE_INITIAL_ENROLL"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CONTINUE_INITIAL_ENROLL</description>
        <action name="enroll_null1" resulting_state="POLICY_PENDING">
            <condition name="!enroll_num_active_certs_less_than_max_active_certs"/>
        </action>
        <action name="enroll_null2" resulting_state="APPROVAL">
            <condition name="enroll_num_active_certs_less_than_max_active_certs"/>
        </action>
    </state>

    <state name="EVAL_SIGNER_TRUST"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_EVAL_SIGNER_TRUST</description>
        <action name="enroll_eval_signer_trust" resulting_state="EVAL_ELIGIBILITY">
        </action>
    </state>

    <state name="FINISHED_PERSIST"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_FINISHED_PERSIST</description>
        <action name="enroll_null1" resulting_state="AUTHENTICATION">
        </action>
    </state>

    <state name="CHECK_FOR_VALID_REQUEST"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CHECK_FOR_VALID_REQUEST</description>
        <action name="enroll_null1" resulting_state="FAILURE">
            <condition name="!enroll_valid_request"/>
        </action>
        <action name="enroll_null2" resulting_state="HAVE_VALID_REQUEST">
            <condition name="enroll_valid_request"/>
        </action>
    </state>

    <state name="QUEUED_FOR_REVOCATION"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_QUEUED_FOR_REVOCATION</description>
        <action name="enroll_null1" resulting_state="CERT_TO_REVOKE">
            <condition name="!enroll_tmp_queue_is_empty"/>
        </action>
        <action name="enroll_revoke_existing_certs" resulting_state="AFTER_REVOKE_QUEUE">
            <condition name="enroll_tmp_queue_is_empty"/>
        </action>
    </state>

    <state name="AUTHENTICATION_MISSING"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_AUTHENTICATION_MISSING</description>
        <action name="enroll_null1" resulting_state="FAILURE">
            <condition name="!enroll_allow_manual_authentication"/>
        </action>
        <action name="enroll_null2" resulting_state="PENDING_MANUAL_AUTHENTICATION">
            <condition name="enroll_allow_manual_authentication"/>
        </action>
    </state>

    <state name="CERT_TO_REVOKE"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CERT_TO_REVOKE</description>
        <action name="enroll_next_cert_to_revoke" resulting_state="HAVE_CERT_TO_REVOKE">
        </action>
    </state>

    <state name="HAVE_CERT_TO_REVOKE"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_HAVE_CERT_TO_REVOKE</description>
        <action name="enroll_revoke_cert" resulting_state="QUEUED_FOR_REVOCATION">
        </action>
    </state>

    <state name="CHECK_RENEWAL_TYPE"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_CHECK_RENEWAL_TYPE</description>
        <action name="enroll_null1" resulting_state="CHECK_RENEWAL_ELIGIBILITY">
            <condition name="enroll_signed_renewal"/>
        </action>
        <action name="enroll_null2" resulting_state="ELIGIBLE_FOR_INITIAL_ENROLL">
            <condition name="!enroll_signed_renewal"/>
        </action>
    </state>

    <state name="AFTER_REVOKE_QUEUE"
            autorun="yes">
        <description>I18N_OPENXPKI_WF_STATE_ENROLLMENT_AFTER_REVOKE_QUEUE</description>
        <action name="enroll_null1" resulting_state="CONTINUE_INITIAL_ENROLL">
        </action>
    </state>

</workflow>
