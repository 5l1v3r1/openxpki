<workflow>
  <type>I18N_OPENXPKI_WF_TYPE_CERTIFICATE_SIGNING_REQUEST_OFFLINE_CA</type>
  <description>I18N_OPENXPKI_WF_DESC_CERTIFICATE_SIGNING_REQUEST_OFFLINE_CA</description>
  <persister>OpenXPKI</persister>

  <!-- ****************************************** -->
  <!--     this is the online part of the CSR     -->
  <!-- ****************************************** -->

  <state name="INITIAL">
    <description>I18N_OPENXPKI_WF_STATE_CERTIFICATE_SIGNING_REQUEST_INITIAL</description>
    <action name="create_csr" 
	    resulting_state="PENDING">
      <condition name="ACL::create_csr"/>
      <condition name="Condition::server_0"/>
    </action>
  </state>

  <state name="PENDING">
    <description>I18N_OPENXPKI_WF_STATE_CERTIFICATE_SIGNING_REQUEST_PENDING</description>
    <action name="I18N_OPENXPKI_WF_ACTION_CHANGE_CSR_ROLE"
	    resulting_state="PENDING">
      <condition name="ACL::change_csr_role"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CHANGE_CSR_PROFILE"
	    resulting_state="PENDING">
      <condition name="ACL::change_csr_profile"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CHANGE_CSR_SUBJECT_STYLE"
	    resulting_state="PENDING">
      <condition name="ACL::change_csr_subject_style"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CHANGE_CSR_SUBJECT"
	    resulting_state="PENDING">
      <condition name="ACL::change_csr_subject"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CHANGE_CSR_SUBJECT_ALT_NAME"
	    resulting_state="PENDING">
      <condition name="ACL::change_csr_subject_alt_name"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CHANGE_CSR_INFO"
	    resulting_state="PENDING">
      <condition name="ACL::change_csr_info"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_APPROVE_CSR"
	    resulting_state="APPROVAL">
      <condition name="ACL::approve_csr"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_REJECT_CSR"
	    resulting_state="REJECTED">
      <condition name="ACL::reject_csr"/>
    </action>
  </state>

  <state name="APPROVAL">
    <description>I18N_OPENXPKI_WF_STATE_CERTIFICATE_SIGNING_REQUEST_APPROVAL</description>
    <action name="I18N_OPENXPKI_WF_ACTION_PERSIST_CSR"
	    resulting_state="PERSISTED_CSR">
      <condition name="ACL::insert_csr"/>
      <condition name="Condition::check_csr_approvals_online"/>
    </action>
    <!-- perhaps we need more than one approval or                 -->
    <!-- perhaps the first approval was from a not authorized role -->
    <action name="I18N_OPENXPKI_WF_ACTION_APPROVE_CSR"
	    resulting_state="APPROVAL">
      <condition name="ACL::approve_csr"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CANCEL_CSR_APPROVAL"
	    resulting_state="PENDING">
      <condition name="ACL::cancel_csr_approval"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_REJECT_CSR"
	    resulting_state="REJECTED">
      <condition name="ACL::reject_csr"/>
    </action>
  </state>

  <state name="PERSISTED_CSR">
    <description>I18N_OPENXPKI_WF_STATE_CERTIFICATE_SIGNING_REQUEST_PERSISTED_CSR</description>
    <action name="I18N_OPENXPKI_WF_ACTION_EXPORT_CSR"
	    resulting_state="EXPORTED">
      <condition name="ACL::export_csr"/>
    </action>
  </state>

  <state name="EXPORTED" />  <!-- this is an intermediate state which will be directly overwritten -->

  <state name="REJECTED" autorun="yes">
    <action name="null"
            resulting_state="FAILURE">
    </action>
  </state>

  <!-- failure and success states will be set by the import system -->

  <!-- ******************************************* -->
  <!--     this is the offline part of the CSR     -->
  <!-- ******************************************* -->

  <state name="INITIAL_IMPORT">
    <description>I18N_OPENXPKI_WF_STATE_CERTIFICATE_SIGNING_REQUEST_IMPORT</description>
    <action name="create_csr" 
	    resulting_state="PENDING_IMPORT">
      <condition name="ACL::import_csr"/>
      <condition name="Condition::server_0"/>
    </action>
  </state>

  <state name="PENDING_IMPORT">
    <description>I18N_OPENXPKI_WF_STATE_CERTIFICATE_SIGNING_REQUEST_PENDING_IMPORT</description>
    <action name="I18N_OPENXPKI_WF_ACTION_APPROVE_CSR"
	    resulting_state="APPROVED_IMPORT">
      <condition name="ACL::approve_csr"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_REJECT_CSR"
	    resulting_state="REJECTED_IMPORT">
      <condition name="ACL::reject_csr"/>
    </action>
  </state>

  <state name="APPROVED_IMPORT">
    <description>I18N_OPENXPKI_WF_STATE_CERTIFICATE_SIGNING_REQUEST_APPROVED_IMPORT</description>
    <action name="I18N_OPENXPKI_WF_ACTION_PERSIST_CSR"
	    resulting_state="SPAWNING_CERT_ISSUANCE">
      <condition name="ACL::insert_csr"/>
      <condition name="Condition::check_csr_approvals_offline"/>
    </action>
    <!-- perhaps we need more than one approval or                 -->
    <!-- perhaps the first approval was from a not authorized role -->
    <action name="I18N_OPENXPKI_WF_ACTION_APPROVE_CSR"
	    resulting_state="APPROVED_IMPORT">
      <condition name="ACL::approve_csr"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CANCEL_CSR_APPROVAL"
	    resulting_state="PENDING_IMPORT">
      <condition name="ACL::cancel_csr_approval"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_REJECT_CSR"
	    resulting_state="REJECTED_IMPORT">
      <condition name="ACL::reject_csr"/>
    </action>
  </state>

  <state name="SPAWNING_CERT_ISSUANCE" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_FORK_CERT_ISSUANCE_INSTANCE"
	    resulting_state="SLEEPING_FOR_CHILD">
    </action>
  </state>

  <!-- sleep a moment to give child the chance to finish -->
  <state name="SLEEPING_FOR_CHILD" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_SLEEP_FOR_CHILD"
            resulting_state="CHECK_CHILD_FINISHED">
    </action>
  </state>

  <!-- if child is not yet finished, this goes out of autorun -->
  <state name="CHECK_CHILD_FINISHED" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_EXPORT_FINISHED_CSR"
            resulting_state="SUCCESS">
      <condition name="wf_child_instance_finished"/>
    </action>
  </state>

<!-- alternatively, this loops till child is finished
     (has the drawback of synchronously waiting for the child) -->
<!-- 
  <state name="WAITING_FOR_CHILD" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_SLEEP_FOR_CHILD"
            resulting_state="WAITING_FOR_CHILD">
        <condition name="!wf_child_instance_finished"/>
    </action>
    <action name="null"
            resulting_state="FINISHED">
        <condition name="wf_child_instance_finished"/>
    </action>
  </state>
-->

  <!-- I see no issuing actions ? -->
  <!-- perhaps we should send it back to the owner? -->
  <state name="REJECTED_IMPORT" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_EXPORT_FAILED_CSR"
            resulting_state="FAILURE">
    </action>
  </state>

  <state name="FAILURE" />
  <state name="SUCCESS" />

  <!-- failure and rejected are actually not correctly signalled to the online component -->
</workflow>
