<%args>
  $session_id => undef
</%args>

<%perl>
    ## if the session is present or faked and
    ## the user tries to penetrate the server then
    ## nothing will happen because the server simply
    ## asks for login and terminates the session
    ## if the authentication is not ok
    ## IMPORTANT: the server and not the client enforces the security
    ## EXCEPTION: if shibboleth is in use then the client forwards
    ##            the session id from its environment (a session injection
    ##            from the browser is not possible)
    if (exists $context{session_id} and
        length $context{session_id})
    {
       $m->call_next;
    } else {
       $m->comp('/authentication/autohandler');
    }
</%perl>

<%init>
    # check if we are using an already existing session and if there
    # has been established a client connection for it.
    if (defined $session_id and
        defined $session_cache{$session_id})
    {
        # this session has already been established
        my $session_context = $session_cache{$session_id};
        # export session id globally
        $context{session_id} = $session_context->{session_id};
    } else {
        delete $context{session_id} if (exists $context{session_id});
    }
</%init>

<%flags>
  inherit => '/syshandler'
</%flags>

<%method title>
  OpenXPKI
</%method>
